<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <jdbc:embedded-database id="dataSourceSocial" type="H2">
        <!--<jdbc:script location="classpath:org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.sql" />-->
        <jdbc:script location="classpath:db/social.sql" />
    </jdbc:embedded-database>

    <!--
        Подключение пропертей из файла в бин Environment.
        ignore-unresolvable="true" - говорит, что, кроме этого файла, могут быть еще файлы с пропертями.
    -->
    <context:property-placeholder location="classpath:social/social.properties" ignore-unresolvable="true"/>

    <bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
        <property name="connectionFactories">
            <list>
                <bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
                    <constructor-arg value="${spring.social.facebook.appId}" />
                    <constructor-arg value="${spring.social.facebook.appSecret}" />
                </bean>
                <bean class="org.springframework.social.twitter.connect.TwitterConnectionFactory">
                    <constructor-arg value="${spring.social.twitter.consumerKey}" />
                    <constructor-arg value="${spring.social.twitter.consumerSecret}" />
                </bean>
                <bean class="org.springframework.social.linkedin.connect.LinkedInConnectionFactory">
                    <constructor-arg value="${spring.social.linkedin.appId}" />
                    <constructor-arg value="${spring.social.linkedin.appSecret}" />
                </bean>
                <bean class="org.springframework.social.google.connect.GoogleConnectionFactory">
                    <constructor-arg value="${spring.social.google.appId}" />
                    <constructor-arg value="${spring.social.google.appSecret}" />
                </bean>
                <bean class="org.springframework.social.vkontakte.connect.VKontakteConnectionFactory">
                    <constructor-arg value="${spring.social.vkontakte.appId}" />
                    <constructor-arg value="${spring.social.vkontakte.appSecret}" />
                </bean>
                <bean class="org.springframework.social.odnoklassniki.connect.OdnoklassnikiConnectionFactory">
                    <constructor-arg value="${spring.social.odnoklassniki.appId}" />
                    <constructor-arg value="${spring.social.odnoklassniki.appKeySecret}" />
                    <constructor-arg value="${spring.social.odnoklassniki.appKeyPublic}" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="usersConnectionRepository" class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
        <constructor-arg ref="dataSourceSocial" />
        <constructor-arg ref="connectionFactoryLocator" />
        <constructor-arg ref="textEncryptor" />
        <property name="connectionSignUp">
            <bean class="org.verygroup.verybook.config.social.AccountConnectionSignUpService">
                <constructor-arg ref="usersDao"/>
            </bean>
        </property>
    </bean>

    <bean id="connectionRepository" factory-bean="usersConnectionRepository" factory-method="createConnectionRepository" scope="request">
        <constructor-arg value="#{request.userPrincipal.name}" />
        <aop:scoped-proxy proxy-target-class="false" />
    </bean>

    <bean class="org.springframework.social.connect.web.ConnectController">
        <!--
            Конструктор принимает параметры connectionFactoryLocator и connectionRepository, но
            за счет аннотации Inject у этого конструктора связка произойдет автоматически
        -->
        <!--<property name="applicationUrl" value="${application.url}" />-->
    </bean>

    <bean id="socialAuthenticationServiceLocator" class="org.springframework.social.security.SocialAuthenticationServiceRegistry">
        <property name="authenticationServices">
            <list>
                <bean class="org.springframework.social.facebook.security.FacebookAuthenticationService">
                    <constructor-arg value="${spring.social.facebook.appId}"/>
                    <constructor-arg value="${spring.social.facebook.appSecret}"/>
                </bean>
                <bean class="org.springframework.social.twitter.security.TwitterAuthenticationService">
                    <constructor-arg value="${spring.social.twitter.consumerKey}"/>
                    <constructor-arg value="${spring.social.twitter.consumerSecret}"/>
                </bean>
                <bean class="org.springframework.social.linkedin.security.LinkedInAuthenticationService">
                    <constructor-arg value="${spring.social.linkedin.appId}"/>
                    <constructor-arg value="${spring.social.linkedin.appSecret}"/>
                </bean>
                <bean class="org.springframework.social.google.security.GoogleAuthenticationService">
                    <constructor-arg value="${spring.social.google.appId}"/>
                    <constructor-arg value="${spring.social.google.appSecret}"/>
                </bean>
                <bean class="org.springframework.social.vkontakte.security.VKontakteAuthenticationService">
                    <constructor-arg value="${spring.social.vkontakte.appId}"/>
                    <constructor-arg value="${spring.social.vkontakte.appSecret}"/>
                </bean>
                <bean class="org.springframework.social.odnoklassniki.security.OdnoklassnikiAuthenticationService">
                    <constructor-arg value="${spring.social.odnoklassniki.appId}"/>
                    <constructor-arg value="${spring.social.odnoklassniki.appKeySecret}"/>
                    <constructor-arg value="${spring.social.odnoklassniki.appKeyPublic}"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- Профили спринга должны быть в конце файла -->
    <beans profile="dev">
        <bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText" />
    </beans>

    <beans profile="prod">
        <bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="text">
            <constructor-arg value="${security.encrypt.password}" />
            <constructor-arg value="${security.encrypt.salt}" />
        </bean>
    </beans>

</beans>